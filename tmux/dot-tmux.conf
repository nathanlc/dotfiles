# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# set default terminal
set -g default-shell /bin/zsh
# share copy/paste
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# make tmux display things in 256 colors
# set -g default-terminal "xterm-256color"
set -g default-terminal "${TERM}"
set -sg terminal-overrides ",*:RGB"

set -g focus-events on

# set scrollback history
set -g history-limit 100000

# short delay for escape
set -g escape-time 1

set -g repeat-time 1000

# messages time
set -g display-time 2000

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Mouse mode
set -g mouse on

# bind prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g renumber-windows on

# tmux reload config
bind r source-file ~/.tmux.conf

# Preserve directory on split/new pane/window
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# Switch to previous session
bind Tab switch-client -l

# Switch to previous window
bind -n C-Tab last-window

# Select window (tab)
bind -n 'M-C-y' select-window -t 1
bind -n 'M-C-u' select-window -t 2
bind -n 'M-C-i' select-window -t 3
bind -n 'M-C-o' select-window -t 4
bind -n 'M-C-p' select-window -t 5

# resize panes
bind C-h resize-pane -L 10
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 10

# find project (session) or create
bind l display-popup -E tmux_project.sh

# session picker
bind s display-popup -EE tmux_sessions.sh
bind S choose-tree -s

# link window to the logs session
bind L link-window -k -t logs:

# Cheatsheet (w like what?)
bind w new-window tmux_cheat_sheet.sh

# synchronize panes
bind y set -w synchronize-panes

# Assign v to visual mode
bind v copy-mode

# vi keys in copy mode
set -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi 'r' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
# bind -T copy-mode-vi 'MouseDragEnd1Pane' send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R

# Design
# popup
set -g popup-border-line heavy
# status line
# set -g status-position top
set -g status-position bottom
set -g status-interval 1
set -g status-justify left
set -g status-left ''
set -g status-right-length 100
set -g status-right '#(cd #{pane_current_path}; tmux_git.sh) [#S]'
set -g status-style "bg=default,fg=colour221"
set -g message-style "bg=colour221,fg=black"
set -g status-bg black
set -g status-fg white
# windows
setw -g window-status-style "fg=white bg=default"
setw -g window-status-format ' #[fg=white]#W#{?window_zoomed_flag,[Z],} '
setw -g window-status-current-style "fg=white bold"
setw -g window-status-current-format ' #W#{?window_zoomed_flag,[Z],} '
setw -g window-status-bell-style "fg=red"
# panes
# set -g pane-border-line double
set -g pane-border-line single
set -g pane-border-style "bg=default,fg=colour250"
set -g pane-active-border-style "bg=black,fg=colour221"

# Sessions related stuff
sandbox="$HOME/sandbox"
nathanlc="$sandbox/nathanlc"
glooko="$sandbox/glooko"

dotfiles_path="$nathanlc/dotfiles"
azr_path="$glooko/A06103-analyzer_server"
kl_path="$glooko/kings-landing"
mds_path="$glooko/A24006-medical_data_service"

# logs
logs_exists='$(tmux list-sessions | grep -q logs)'
# w like watching logs to keep "l" free
bind -n 'M-C-w' if-shell "$logs_exists" {
    attach-session -t logs
}  {
    new-session -s logs
}

# dotfiles (c like config)
dotfiles_exist='$(tmux list-sessions | grep -q dotfiles)'
dotfiles_session="dotfiles"
bind -n 'M-C-c' if-shell "$dotfiles_exist" {
    attach-session -t "$dotfiles_session"
}  {
    new-session -s "$dotfiles_session" -n nvim -c "$dotfiles_path"
}

# daemons
daemons_exist='$(tmux list-sessions | grep -q daemons)'
daemons_session="daemons"
bind -n 'M-C-d' if-shell "$daemons_exist" {
    attach-session -t "$daemons_session"
}  {
    new-session -s "$daemons_session" -c "$dotfiles_path/config/kmonad"
}

# analyzer
azr_exists='$(tmux list-sessions | grep -q A06103-analyzer_server)'
azr_session="A06103-analyzer_server"
bind -n 'M-C-a' if-shell "$azr_exists" {
    attach-session -t "$azr_session"
}  {
    new-session -s "$azr_session" -n nvim -c "$azr_path";
    new-window -d -n azr-logs -c "$azr_path"
}

# kings-landing
kl_exists='$(tmux list-sessions | grep -q kings-landing)'
kl_session="kings-landing"
bind -n 'M-C-k' if-shell "$kl_exists" {
    attach-session -t "$kl_session"
}  {
    new-session -s "$kl_session" -n nvim -c "$kl_path";
    new-window -d -n rails-logs -c "$kl_path";
    new-window -d -n react-logs -c "$kl_path/client"
}

# MDS
mds_exists='$(tmux list-sessions | grep -q A24006-medical_data_service)'
mds_session="A24006-medical_data_service"
bind -n 'M-C-s' if-shell "$mds_exists" {
    attach-session -t "$mds_session"
}  {
    new-session -s "$mds_session" -n nvim -c "$mds_path";
    new-window -d -n mds-logs -c "$mds_path"
}

run '~/.tmux/plugins/tpm/tpm'
